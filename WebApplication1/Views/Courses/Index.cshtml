@model IEnumerable<WebApplication1.Models.Course>
@using System.Security.Claims

@{
    ViewData["Title"] = "Courses";
    // Provide default values to prevent crash if not set (e.g., for Student view)
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
}

<h1>Courses</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
}

@if (!User.IsInRole("Student"))
{
    <form asp-action="Index" method="get" class="mb-4">
        <div class="row g-3 align-items-center">
            <div class="col-sm-3">
                <input type="text" name="title" class="form-control" placeholder="Course Title" value="@ViewBag.TitleFilter">
            </div>
            <div class="col-sm-3">
                <select name="departmentId" class="form-select" asp-items="ViewBag.Departments">
                    <option value="">All Departments</option>
                </select>
            </div>
            <div class="col-sm-3">
                <select name="instructorId" class="form-select" asp-items="ViewBag.Instructors">
                    <option value="">All Instructors</option>
                </select>
            </div>
            <div class="col-sm-3">
                <button type="submit" class="btn btn-info">Filter</button>
                <a asp-action="Index" class="btn btn-secondary">Reset</a>
            </div>
        </div>
    </form>
}


<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Degree</th>
            <th>Min Degree</th>
            <th>Department</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Degree)</td>
                <td>@Html.DisplayFor(modelItem => item.MinimumDegree)</td>
                <td>@Html.DisplayFor(modelItem => item.Department.Name)</td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@item.Id">
                            Delete
                        </button>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!User.IsInRole("Student") && totalPages > 1)
{
    <nav>
        <ul class="pagination">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-title="@ViewBag.TitleFilter" asp-route-departmentId="@ViewBag.DepartmentFilter" asp-route-instructorId="@ViewBag.InstructorFilter">First</a>
            </li>
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-title="@ViewBag.TitleFilter" asp-route-departmentId="@ViewBag.DepartmentFilter" asp--route-instructorId="@ViewBag.InstructorFilter">Previous</a>
            </li>

            @for (var i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-title="@ViewBag.TitleFilter" asp-route-departmentId="@ViewBag.DepartmentFilter" asp-route-instructorId="@ViewBag.InstructorFilter">@i</a>
                </li>
            }

            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-title="@ViewBag.TitleFilter" asp-route-departmentId="@ViewBag.DepartmentFilter" asp-route-instructorId="@ViewBag.InstructorFilter">Next</a>
            </li>
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@totalPages" asp-route-title="@ViewBag.TitleFilter" asp-route-departmentId="@ViewBag.DepartmentFilter" asp-route-instructorId="@ViewBag.InstructorFilter">Last</a>
            </li>
        </ul>
    </nav>
}


@if (User.IsInRole("Admin"))
{
    <partial name="_DeleteConfirmationModal" model='new ViewDataDictionary(ViewData) { { "Controller", "Courses" } }' />

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var deleteModal = document.getElementById('deleteModal');
                if (deleteModal) {
                    deleteModal.addEventListener('show.bs.modal', function (event) {
                        var button = event.relatedTarget;
                        var id = button.getAttribute('data-id');
                        var form = deleteModal.querySelector('form');
                        var action = form.getAttribute('action');
                        form.setAttribute('action', action.replace('__id__', id));
                    });
                }
            });
        </script>
    }
}

