@model IEnumerable<WebApplication1.Models.Student>

@{
    ViewData["Title"] = "Students";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
}

<h1>Students</h1>

@if (User.IsInRole("Admin") || User.IsInRole("HR"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>

    <form asp-action="Index" method="get" class="mb-4">
        <div class="row g-3">
            <div class="col-sm-3">
                <input type="text" name="name" class="form-control" placeholder="Filter by name..." value="@ViewBag.NameFilter" />
            </div>
            <div class="col-sm-3">
                <select name="departmentId" class="form-control" asp-items="ViewBag.Departments">
                    <option value="">All Departments</option>
                </select>
            </div>
            <div class="col-sm-3">
                <select name="courseId" class="form-control" asp-items="ViewBag.Courses">
                    <option value="">All Courses</option>
                </select>
            </div>
            <div class="col-sm-3">
                <button type="submit" class="btn btn-info">Filter</button>
                <a asp-action="Index" class="btn btn-secondary">Reset</a>
            </div>
        </div>
    </form>
}


<table class="table">
    <thead>
        <tr>
            <th> @Html.DisplayNameFor(model => model.Name) </th>
            <th> @Html.DisplayNameFor(model => model.Address) </th>
            <th> @Html.DisplayNameFor(model => model.Department) </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td> @Html.DisplayFor(modelItem => item.Name) </td>
                <td> @Html.DisplayFor(modelItem => item.Address) </td>
                <td> @Html.DisplayFor(modelItem => item.Department.Name) </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                    @if (User.IsInRole("Admin") || User.IsInRole("HR"))
                    {
                        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-id="@item.Id">
                            Delete
                        </button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!User.IsInRole("Student"))
{
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-name="@ViewBag.NameFilter"
                       asp-route-departmentId="@ViewBag.DepartmentFilter"
                       asp-route-courseId="@ViewBag.CourseFilter"
                       asp-route-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}

<partial name="_DeleteConfirmationModal" />

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var recipient = button.getAttribute('data-bs-id');
                    var modalForm = deleteModal.querySelector('#deleteForm');
                    modalForm.action = '/Students/Delete/' + recipient;
                });
            }
        });
    </script>
}

